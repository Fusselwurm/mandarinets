name: Pg driver

on: [push, pull_request]

jobs:
  build:
    name: tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
      fail-fast: true
    steps:
      - name: Setup Environment
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=RUST_BACKTRACE::full

      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: 1.47.0
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-
      # Build
      - name: Build
        run: cd rust-core && cd database && cd drivers && cd postgres && cargo build --release --locked --all-targets

      - name: Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: 'Artifacts'
          path: |
            target/release/
            ./rust-core/database/drivers/postgres/target/release/

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/libmandarine_postgres.dylib
            target/release/libmandarine_postgres.so
            target/release/libmandarine_postgres.dll